name: Main
on:
    pull_request:
        branches:
            - main
            - develop

jobs:
    clean:
        name: Clean workspace
        runs-on: self-hosted
        if: github.event_name == 'pull_request'
        steps:
            - name: Tidy
              uses: AutoModality/action-clean@v1
    docker:
        needs: clean
        name: Push Docker Image
        runs-on: self-hosted
        if: github.event_name == 'pull_request'
        steps:
            - name: Checkout repo
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  ref: develop

            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v1

            - name: Set current date as env variable
              run: echo "BUILDSTAMP=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
              env:
                  BUILDSTAMP: "${{ env.BUILDSTAMP }}"
            - name: Build and push
              uses: docker/build-push-action@v2
              with:
                  push: true
                  tags: ${{ secrets.DOCKER_USERNAME }}/portfolio:${{ env.BUILDSTAMP }}
                  secrets: |
                      "TWITTER_TOKEN=${{ secrets.TWITTER_TOKEN }}"
                  cache-from:
                      type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME
                      }}/portfolio:buildcache
                  ache-to:
                      type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME
                      }}/portfolio:buildcache,mode=max

    restart:
        needs: docker
        name: Redeploy
        runs-on: pineapple
        if: github.event_name == 'pull_request'
        steps:
            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Stop running container
              run:
                  docker ps -q --filter "name=portfolio" | grep -q . && docker stop
                  portfolio && docker rm -fv portfolio
            - name: Pull latest image
              run: docker pull helblingjoel/portfolio:${BUILDSTAMP}
            - name: Start container
              run:
                  docker run -p 3000:3000 -d --name portfolio --restart unless-stopped
                  helblingjoel/portfolio:${BUILDSTAMP}
